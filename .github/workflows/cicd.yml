name: Build, Publish and Deploy

on: 
  push:
    branches: [main]

jobs:
  build:
    name: Build Docker image for rest-api-in-k8s
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Dockerhub login
        id: login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USR }}
          password: ${{ secrets.DOCKER_PWD }}

      - name: Docker build and push
        id: build
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_USR }}/rest-api-in-k8s:${{ github.ref_name }}-$(git rev-parse --short ${{ github.sha }}), ${{ secrets.DOCKER_USR }}/rest-api-in-k8s:latest

  deploy:
    name: Deploy Docker image to k8s
    runs-on: ubuntu-latest

    steps:
      - name: kubectl
        id: kubectl
        uses: azure/setup-kubectl@v3

      - name: deploy
        id: deploy
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
         kubectl set image deployment/rest-api-in-k8s-nginx nginx=${{ secrets.DOCKER_USR }}/rest-api-in-k8s:${{ github.ref_name }}-$(git rev-parse --short ${{ github.sha }})
         kubectl rollout status -w deployment/rest-api-in-k8s-nginx
         export SERVICE_IP=$(kubectl get svc --namespace default restapi-helm --template "{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}")
         timeout 300 bash -c 'while [[ "$(curl --insecure -s -o /dev/null -w ''%{http_code}'' https://$SERVICE_IP:80)" != "200" ]]; do sleep 5; done'

